public class Pilha {
	
	private int topoA = -1;
	private int topoB = 10;
	private int inferiorA;
	private int inferiorB;
	private int tamanho = 10;
	private int qtdElementos = 0;
	private int qtdA = 0;
	private int qtdB = 0;	
	private int qtdAdicionadoA = 0;
	private int qtdAdicionadoB = 0;
	private Object p[] = new Object [tamanho];
	
	//criaPilha
	public void criarPilha() {
		topoA = inferiorA = -1;
		topoB = inferiorB = 10;
	}
	

	public void empilharA(Object obj) {
		int totalDisponivel = tamanho - tamanhoB();
		
		if(totalDisponivel == 0) {
			qtdA--;
		}else if(qtdAdicionadoA < totalDisponivel) {
			if(topoA == -1) {
				inferiorA = 0;
			}
				topoA++;
				p[topoA] = obj;
			}else {
				qtdA--;
			}
			qtdAdicionadoA++;
			qtdA++;
	}
	
	public void empilharB(Object obj) {
		int totalDisponivel = tamanho - tamanhoA();
		
		if(totalDisponivel == 0) {
			qtdB--;
		}else if(qtdAdicionadoB < totalDisponivel){
			if(topoB == 10) {
				inferiorB = 10;
			}
				topoB--;
				p[topoB] = obj;	
			}else {
				qtdB--;
		}
			qtdAdicionadoB++;
			qtdB++;
	}
	
	public boolean vaziaA() {
		return (qtdA > 0 ? false:true);
	}
	
	public boolean vaziaB() {
		return (qtdB > 0 ? false:true);
	}
	
	public Object desempilhaA() {
		Object var = -1;
	    if(tamanhoA() == 0){
	    	throw new IllegalArgumentException("Não é possível desempilharA");  
	    }else if(tamanhoA() == 1){
	    	var = p[topoA];
	    	qtdA--;
	    }else{
	    	var = p[topoA];
	    	topoA--;
	    	qtdA--;
	    }
	    return var;
	}
	
	public Object desempilhaB() {
		 Object var = -1;
		 if(tamanhoB() == 0){
		      throw new IllegalArgumentException("Não é possível desempilharB");  
		 }else if(tamanhoB() == 1){
		      var = p[topoB];
		      qtdB--;
		 }else{
		      var = p[topoB];
		      topoB++;
		      qtdB--;
		 }
		 return var;
	}
	
	public boolean cheiaA() {
		return (qtdA == tamanho -1 ? true:false);
	}
	
	public boolean cheiaB() {
		return (qtdB == tamanho -1 ? true:false);
	}
	
	public Object topoA() {
		return (tamanhoA() > 0 ? p[topoA] : "Nenhum topo encontrado");
	}
	
	public Object topoB() {
		return (tamanhoB() > 0 ? p[topoB] : "Nenhum topo encontrado");
	}
	
	public void mostrarPilhaA() {
		for(int i = inferiorA; i < qtdA; i++) {
			System.out.println("["+p[i]+"]");
		}	
	}
	
	public void mostrarPilhaB() {
		for(int i = inferiorB-1; i >= topoB; i--) {
			System.out.println("["+p[i]+"]");
		}
	}
	
	public int tamanhoA() {
		return qtdA;
	}
	
	public int tamanhoB() {
		return qtdB;
	}
	
}
